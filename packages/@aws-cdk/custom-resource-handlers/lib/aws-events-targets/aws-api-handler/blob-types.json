{
  "acm-pca:ImportCertificateAuthorityCertificate.Certificate": true,
  "acm-pca:ImportCertificateAuthorityCertificate.CertificateChain": true,
  "acm-pca:IssueCertificate.Csr": true,
  "acm:ExportCertificate.Passphrase": true,
  "acm:ImportCertificate.Certificate": true,
  "acm:ImportCertificate.PrivateKey": true,
  "acm:ImportCertificate.CertificateChain": true,
  "apigateway:ImportApiKeys.body": true,
  "apigateway:ImportDocumentationParts.body": true,
  "apigateway:ImportRestApi.body": true,
  "apigateway:PutRestApi.body": true,
  "apigateway:PostToConnection.Data": true,
  "appconfig:CreateHostedConfigurationVersion.Content": true,
  "appsync:StartSchemaCreation.definition": true,
  "backup-storage:NotifyObjectComplete.MetadataBlob": true,
  "backup-storage:PutChunk.Data": true,
  "backup-storage:PutObject.InlineChunk": true,
  "cloudfront:CreateFunction.FunctionCode": true,
  "cloudfront:TestFunction.EventObject": true,
  "cloudfront:UpdateFunction.FunctionCode": true,
  "cloudsearch:UploadDocuments.documents": true,
  "codeartifact:PublishPackageVersion.assetContent": true,
  "codecommit:CreateCommit.putFiles.*.fileContent": true,
  "codecommit:CreateUnreferencedMergeCommit.conflictResolution.replaceContents.*.content": true,
  "codecommit:MergeBranchesBySquash.conflictResolution.replaceContents.*.content": true,
  "codecommit:MergeBranchesByThreeWay.conflictResolution.replaceContents.*.content": true,
  "codecommit:MergePullRequestBySquash.conflictResolution.replaceContents.*.content": true,
  "codecommit:MergePullRequestByThreeWay.conflictResolution.replaceContents.*.content": true,
  "codecommit:PutFile.fileContent": true,
  "cognito-idp:SetUICustomization.ImageFile": true,
  "comprehend:ClassifyDocument.Bytes": true,
  "comprehend:DetectEntities.Bytes": true,
  "dms:ImportCertificate.CertificateWallet": true,
  "datasync:CreateLocationHdfs.KerberosKeytab": true,
  "datasync:CreateLocationHdfs.KerberosKrb5Conf": true,
  "datasync:CreateLocationObjectStorage.ServerCertificate": true,
  "datasync:UpdateLocationHdfs.KerberosKeytab": true,
  "datasync:UpdateLocationHdfs.KerberosKrb5Conf": true,
  "datasync:UpdateLocationObjectStorage.ServerCertificate": true,
  "ebs:PutSnapshotBlock.BlockData": true,
  "ec2:BundleInstance.Storage.S3.UploadPolicy": true,
  "ec2:ImportKeyPair.PublicKeyMaterial": true,
  "ec2:ModifyInstanceAttribute.UserData.Value": true,
  "ecr-public:CreateRepository.catalogData.logoImageBlob": true,
  "ecr-public:PutRepositoryCatalogData.catalogData.logoImageBlob": true,
  "ecr-public:UploadLayerPart.layerPartBlob": true,
  "ecr:UploadLayerPart.layerPartBlob": true,
  "firehose:PutRecord.Record.Data": true,
  "firehose:PutRecordBatch.Records.*.Data": true,
  "gamelift:CreateScript.ZipFile": true,
  "gamelift:UpdateScript.ZipFile": true,
  "None:ImportGameConfiguration.ImportSource.File": true,
  "glacier:UploadArchive.body": true,
  "glacier:UploadMultipartPart.body": true,
  "glue:UpdateColumnStatisticsForPartition.ColumnStatisticsList.*.StatisticsData.DecimalColumnStatisticsData.MinimumValue.UnscaledValue": true,
  "glue:UpdateColumnStatisticsForPartition.ColumnStatisticsList.*.StatisticsData.DecimalColumnStatisticsData.MaximumValue.UnscaledValue": true,
  "glue:UpdateColumnStatisticsForTable.ColumnStatisticsList.*.StatisticsData.DecimalColumnStatisticsData.MinimumValue.UnscaledValue": true,
  "glue:UpdateColumnStatisticsForTable.ColumnStatisticsList.*.StatisticsData.DecimalColumnStatisticsData.MaximumValue.UnscaledValue": true,
  "greengrass:CreateComponentVersion.inlineRecipe": true,
  "iotdata:Publish.payload": true,
  "iotdata:UpdateThingShadow.payload": true,
  "ioteventsdata:BatchPutMessage.messages.*.payload": true,
  "iotwireless:UpdateResourcePosition.GeoJsonPayload": true,
  "iot:CreateOTAUpdate.files.*.codeSigning.customCodeSigning.signature.inlineDocument": true,
  "iot:TestInvokeAuthorizer.mqttContext.password": true,
  "iotanalytics:BatchPutMessage.messages.*.payload": true,
  "iotanalytics:RunPipelineActivity.payloads.*": true,
  "iotsitewise:CreatePortal.portalLogoImageFile.data": true,
  "iotsitewise:UpdatePortal.portalLogoImage.file.data": true,
  "kafka:CreateConfiguration.ServerProperties": true,
  "kafka:UpdateConfiguration.ServerProperties": true,
  "kendra:BatchPutDocument.Documents.*.Blob": true,
  "kinesisanalytics:CreateApplication.ApplicationConfiguration.ApplicationCodeConfiguration.CodeContent.ZipFileContent": true,
  "kinesisanalytics:UpdateApplication.ApplicationConfigurationUpdate.ApplicationCodeConfigurationUpdate.CodeContentUpdate.ZipFileContentUpdate": true,
  "kinesis:PutRecord.Data": true,
  "kinesis:PutRecords.Records.*.Data": true,
  "kms:Decrypt.CiphertextBlob": true,
  "kms:Decrypt.Recipient.AttestationDocument": true,
  "kms:Encrypt.Plaintext": true,
  "kms:GenerateDataKey.Recipient.AttestationDocument": true,
  "kms:GenerateDataKeyPair.Recipient.AttestationDocument": true,
  "kms:GenerateMac.Message": true,
  "kms:GenerateRandom.Recipient.AttestationDocument": true,
  "kms:ImportKeyMaterial.ImportToken": true,
  "kms:ImportKeyMaterial.EncryptedKeyMaterial": true,
  "kms:ReEncrypt.CiphertextBlob": true,
  "kms:Sign.Message": true,
  "kms:Verify.Message": true,
  "kms:Verify.Signature": true,
  "kms:VerifyMac.Message": true,
  "kms:VerifyMac.Mac": true,
  "lambda:CreateFunction.Code.ZipFile": true,
  "lambda:Invoke.Payload": true,
  "lambda:InvokeAsync.InvokeArgs": true,
  "lambda:InvokeWithResponseStream.Payload": true,
  "lambda:PublishLayerVersion.Content.ZipFile": true,
  "lambda:UpdateFunctionCode.ZipFile": true,
  "lex:StartImport.payload": true,
  "lex:PostContent.inputStream": true,
  "lex:RecognizeUtterance.inputStream": true,
  "lookoutvision:DetectAnomalies.Body": true,
  "lookoutvision:UpdateDatasetEntries.Changes": true,
  "mediastore:PutObject.Body": true,
  "awsmobilehubservice:CreateProject.contents": true,
  "awsmobilehubservice:UpdateProject.contents": true,
  "ses:CreateDeliverabilityTestReport.Content.Raw.Data": true,
  "ses:SendEmail.Content.Raw.Data": true,
  "mobiletargeting:SendMessages.MessageRequest.MessageConfiguration.EmailMessage.RawEmail.Data": true,
  "mobiletargeting:SendUsersMessages.SendUsersMessageRequest.MessageConfiguration.EmailMessage.RawEmail.Data": true,
  "qldb:SendCommand.CommitTransaction.CommitDigest": true,
  "qldb:SendCommand.ExecuteStatement.Parameters.*.IonBinary": true,
  "quicksight:StartAssetBundleImportJob.AssetBundleImportSource.Body": true,
  "rekognition:CompareFaces.SourceImage.Bytes": true,
  "rekognition:CompareFaces.TargetImage.Bytes": true,
  "rekognition:DetectCustomLabels.Image.Bytes": true,
  "rekognition:DetectFaces.Image.Bytes": true,
  "rekognition:DetectLabels.Image.Bytes": true,
  "rekognition:DetectModerationLabels.Image.Bytes": true,
  "rekognition:DetectProtectiveEquipment.Image.Bytes": true,
  "rekognition:DetectText.Image.Bytes": true,
  "rekognition:IndexFaces.Image.Bytes": true,
  "rekognition:RecognizeCelebrities.Image.Bytes": true,
  "rekognition:SearchFacesByImage.Image.Bytes": true,
  "rekognition:SearchUsersByImage.Image.Bytes": true,
  "rekognition:UpdateDatasetEntries.Changes.GroundTruth": true,
  "s3:PutObject.Body": true,
  "s3:UploadPart.Body": true,
  "s3:WriteGetObjectResponse.Body": true,
  "sagemaker:InvokeEndpoint.Body": true,
  "sagemaker:InvokeEndpointWithResponseStream.Body": true,
  "secretsmanager:CreateSecret.SecretBinary": true,
  "secretsmanager:PutSecretValue.SecretBinary": true,
  "secretsmanager:UpdateSecret.SecretBinary": true,
  "ses:SendRawEmail.RawMessage.Data": true,
  "signer:SignPayload.payload": true,
  "ssm:RegisterTaskWithMaintenanceWindow.TaskInvocationParameters.Lambda.Payload": true,
  "ssm:UpdateMaintenanceWindowTask.TaskInvocationParameters.Lambda.Payload": true,
  "support:AddAttachmentsToSet.attachments.*.data": true,
  "synthetics:CreateCanary.Code.ZipFile": true,
  "synthetics:UpdateCanary.Code.ZipFile": true,
  "textract:AnalyzeDocument.Document.Bytes": true,
  "textract:AnalyzeExpense.Document.Bytes": true,
  "textract:AnalyzeID.DocumentPages.*.Bytes": true,
  "textract:DetectDocumentText.Document.Bytes": true,
  "translate:ImportTerminology.TerminologyData.File": true,
  "translate:TranslateDocument.Document.Content": true,
  "waf-regional:UpdateByteMatchSet.Updates.*.ByteMatchTuple.TargetString": true,
  "waf:UpdateByteMatchSet.Updates.*.ByteMatchTuple.TargetString": true,
  "wafv2:CheckCapacity.Rules.*.Statement.ByteMatchStatement.SearchString": true,
  "wafv2:CheckCapacity.Rules.*.Statement.AndStatement.Statements.*.ByteMatchStatement.SearchString": true,
  "wafv2:CheckCapacity.Rules.*.Statement.OrStatement.Statements.*.ByteMatchStatement.SearchString": true,
  "wafv2:CreateRuleGroup.Rules.*.Statement.ByteMatchStatement.SearchString": true,
  "wafv2:CreateRuleGroup.Rules.*.Statement.AndStatement.Statements.*.ByteMatchStatement.SearchString": true,
  "wafv2:CreateRuleGroup.Rules.*.Statement.OrStatement.Statements.*.ByteMatchStatement.SearchString": true,
  "wafv2:CreateWebACL.Rules.*.Statement.ByteMatchStatement.SearchString": true,
  "wafv2:CreateWebACL.Rules.*.Statement.AndStatement.Statements.*.ByteMatchStatement.SearchString": true,
  "wafv2:CreateWebACL.Rules.*.Statement.OrStatement.Statements.*.ByteMatchStatement.SearchString": true,
  "wafv2:UpdateRuleGroup.Rules.*.Statement.ByteMatchStatement.SearchString": true,
  "wafv2:UpdateRuleGroup.Rules.*.Statement.AndStatement.Statements.*.ByteMatchStatement.SearchString": true,
  "wafv2:UpdateRuleGroup.Rules.*.Statement.OrStatement.Statements.*.ByteMatchStatement.SearchString": true,
  "wafv2:UpdateWebACL.Rules.*.Statement.ByteMatchStatement.SearchString": true,
  "wafv2:UpdateWebACL.Rules.*.Statement.AndStatement.Statements.*.ByteMatchStatement.SearchString": true,
  "wafv2:UpdateWebACL.Rules.*.Statement.OrStatement.Statements.*.ByteMatchStatement.SearchString": true,
  "workspaces:ImportClientBranding.DeviceTypeWindows.Logo": true,
  "workspaces:ImportClientBranding.DeviceTypeOsx.Logo": true,
  "workspaces:ImportClientBranding.DeviceTypeAndroid.Logo": true,
  "workspaces:ImportClientBranding.DeviceTypeIos.Logo": true,
  "workspaces:ImportClientBranding.DeviceTypeIos.Logo2x": true,
  "workspaces:ImportClientBranding.DeviceTypeIos.Logo3x": true,
  "workspaces:ImportClientBranding.DeviceTypeLinux.Logo": true,
  "workspaces:ImportClientBranding.DeviceTypeWeb.Logo": true
}
